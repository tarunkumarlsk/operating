#include <stdio.h>
#include <stdlib.h>

int abs_diff(int a, int b) {
    return abs(a - b);
}

int compare(const void *a, const void *b) {
    return (*(int *)a - *(int *)b);
}

int calculateTotalHeadMovement(int tracks[], int numTracks, int initialTrack, int direction) {
    int totalHeadMovement = 0;
    int currentTrack = initialTrack;

    qsort(tracks, numTracks, sizeof(int), compare);

    int start, end;
    if (direction == 1) {
        start = 0;
        end = numTracks - 1;
    } else {
        start = numTracks - 1;
        end = 0;
    }

    int i = start;
    while (i != end) {
        totalHeadMovement += abs_diff(currentTrack, tracks[i]);
        currentTrack = tracks[i];

        if (direction == 1) {
            i++;
        } else {
            i--;
        }
    }

    totalHeadMovement += abs_diff(currentTrack, tracks[i]);

    return totalHeadMovement;
}

float calculateAverageHeadMovement(int tracks[], int numTracks, int initialTrack) {
    int totalHeadMovement1 = calculateTotalHeadMovement(tracks, numTracks, initialTrack, 1);
    int totalHeadMovement2 = calculateTotalHeadMovement(tracks, numTracks, initialTrack, -1);

    return (float)(totalHeadMovement1 + totalHeadMovement2) / numTracks;
}

int main() {
    int numTracks = 5;
    int tracks[] = {55, 58, 60, 70, 18};
    int initialTrack;

    printf("Enter the initial track position: ");
    scanf("%d", &initialTrack);

    float averageHeadMovement = calculateAverageHeadMovement(tracks, numTracks, initialTrack);

    printf("\nTrack Positions:\n");
    for (int i = 0; i < numTracks; i++) {
        printf("Track %d: %d\n", i + 1, tracks[i]);
    }

    printf("\nAverage Head Movement: %.2f\n", averageHeadMovement);

    return 0;
}
